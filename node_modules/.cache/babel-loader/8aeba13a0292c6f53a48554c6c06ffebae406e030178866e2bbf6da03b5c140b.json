{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Farman\\\\Desktop\\\\reload\\\\github-user-search-app\\\\github_search\\\\src\\\\components\\\\Toggle\\\\Toggle.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { DarkModeSwitch } from \"react-toggle-dark-mode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Toggle() {\n  _s();\n  const [isDarkMode, setDarkMode] = React.useState(false);\n  const toggleDarkMode = (checked = false) => {\n    setDarkMode(checked);\n  };\n  const defaultProperties = {\n    dark: {\n      circle: {\n        r: 9\n      },\n      mask: {\n        cx: \"50%\",\n        cy: \"23%\"\n      },\n      svg: {\n        transform: \"rotate(40deg)\"\n      },\n      lines: {\n        opacity: 0\n      }\n    },\n    light: {\n      circle: {\n        r: 5\n      },\n      mask: {\n        cx: \"100%\",\n        cy: \"0%\"\n      },\n      svg: {\n        transform: \"rotate(90deg)\"\n      },\n      lines: {\n        opacity: 1\n      }\n    },\n    springConfig: {\n      mass: 4,\n      tension: 250,\n      friction: 35\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DarkModeSwitch, {\n    style: style,\n    checked: isDarkMode,\n    onChange: toggleDarkMode,\n    size: 120\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Toggle, \"39d8H6kbpNdj0sDU5be9e+FqgPg=\");\n_c = Toggle;\nexport default Toggle;\nvar _c;\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"names":["React","DarkModeSwitch","jsxDEV","_jsxDEV","Toggle","_s","isDarkMode","setDarkMode","useState","toggleDarkMode","checked","defaultProperties","dark","circle","r","mask","cx","cy","svg","transform","lines","opacity","light","springConfig","mass","tension","friction","style","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Farman/Desktop/reload/github-user-search-app/github_search/src/components/Toggle/Toggle.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { DarkModeSwitch } from \"react-toggle-dark-mode\";\r\n\r\nfunction Toggle() {\r\n  const [isDarkMode, setDarkMode] = React.useState(false);\r\n\r\n  const toggleDarkMode = (checked = false) => {\r\n    setDarkMode(checked);\r\n  };\r\n  const defaultProperties = {\r\n    dark: {\r\n      circle: {\r\n        r: 9,\r\n      },\r\n      mask: {\r\n        cx: \"50%\",\r\n        cy: \"23%\",\r\n      },\r\n      svg: {\r\n        transform: \"rotate(40deg)\",\r\n      },\r\n      lines: {\r\n        opacity: 0,\r\n      },\r\n    },\r\n    light: {\r\n      circle: {\r\n        r: 5,\r\n      },\r\n      mask: {\r\n        cx: \"100%\",\r\n        cy: \"0%\",\r\n      },\r\n      svg: {\r\n        transform: \"rotate(90deg)\",\r\n      },\r\n      lines: {\r\n        opacity: 1,\r\n      },\r\n    },\r\n    springConfig: { mass: 4, tension: 250, friction: 35 },\r\n  };\r\n  \r\n  return (\r\n    <DarkModeSwitch\r\n      style={style}\r\n      checked={isDarkMode}\r\n      onChange={toggleDarkMode}\r\n      size={120}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Toggle;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMC,cAAc,GAAGA,CAACC,OAAO,GAAG,KAAK,KAAK;IAC1CH,WAAW,CAACG,OAAO,CAAC;EACtB,CAAC;EACD,MAAMC,iBAAiB,GAAG;IACxBC,IAAI,EAAE;MACJC,MAAM,EAAE;QACNC,CAAC,EAAE;MACL,CAAC;MACDC,IAAI,EAAE;QACJC,EAAE,EAAE,KAAK;QACTC,EAAE,EAAE;MACN,CAAC;MACDC,GAAG,EAAE;QACHC,SAAS,EAAE;MACb,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE;MACX;IACF,CAAC;IACDC,KAAK,EAAE;MACLT,MAAM,EAAE;QACNC,CAAC,EAAE;MACL,CAAC;MACDC,IAAI,EAAE;QACJC,EAAE,EAAE,MAAM;QACVC,EAAE,EAAE;MACN,CAAC;MACDC,GAAG,EAAE;QACHC,SAAS,EAAE;MACb,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE;MACX;IACF,CAAC;IACDE,YAAY,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,OAAO,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAG;EACtD,CAAC;EAED,oBACEvB,OAAA,CAACF,cAAc;IACb0B,KAAK,EAAEA,KAAM;IACbjB,OAAO,EAAEJ,UAAW;IACpBsB,QAAQ,EAAEnB,cAAe;IACzBoB,IAAI,EAAE;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEN;AAAC5B,EAAA,CAhDQD,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AAkDf,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}